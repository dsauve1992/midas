name: CI/CD

on:
  push:
    branch: master
#    paths:
#      - 'packages/frontend/**'
#      - 'packages/backend/**'
#      - 'packages/infra/**'

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.1

      - name: Install Dependencies
        run: yarn


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build React App
        working-directory: ./packages/frontend
        env:
          VITE_BACKEND_URL: http://${{ secrets.EC2_HOST }}
        run: yarn build
      - name: Deploy app build to S3 bucket
        working-directory: ./packages/frontend
        run: aws s3 sync ./dist/ s3://${{vars.FRONTEND_STORAGE_S3_BUCKET_NAME }} --acl public-read --delete


  backend-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build, tag, and push image to Docker Hub
        working-directory: ./packages/backend
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          IMAGE_NAME: midas-backend
          IMAGE_TAG: latest
        run: |
          docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG -f ./production.Dockerfile .
          docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG

  backend-deploy:
    needs: backend-build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          IMAGE_NAME: midas-backend
          IMAGE_TAG: latest
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: DOCKER_USERNAME,IMAGE_NAME,IMAGE_TAG
          script: |
            if [ "$(docker ps -q)" ]; then
              docker stop $(docker ps -q)
            else
              echo "Aucun conteneur Docker en cours d'ex√©cution."
            fi
            echo "DOCKER_USERNAME: $DOCKER_USERNAME"
            echo "IMAGE_NAME: $IMAGE_NAME"
            echo "IMAGE_TAG: $IMAGE_TAG"
            docker pull $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG
            docker run -d \
              -p 80:3000 \
              -e FMP_API_KEY=${{ secrets.FMP_PRIVATE_KEY }} \
              $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG


